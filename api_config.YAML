openapi: 3.0.0
info:
  title: Financial Modeling Prep API
  version: "v3"
servers:
  - url: https://financialmodelingprep.com/api/v3
paths:
  /balance-sheet-statement/{ticker}:
    get:
      summary: Get Balance Sheet Statement
      parameters:
        - in: path
          name: ticker
          required: true
          schema:
            type: string
          description: Ticker symbol of the company
        - in: query
          name: period
          schema:
            type: string
            enum: [annual, quarter]
          description: Period of the statement
        - in: query
          name: datatype
          schema:
            type: string
          description: Type of the data format, e.g., csv
        - in: query
          name: limit
          schema:
            type: number
          description: Limit for the number of results
        - in: query
          name: apikey
          required: true
          schema:
            type: string
          description: API key for authorization
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  date: { type: "string" }
                  symbol: { type: "string" }
                  reportedCurrency: { type: "string" }
                  cik: { type: "string" }
                  fillingDate: { type: "string" }
                  acceptedDate: { type: "string" }
                  calendarYear: { type: "string" }
                  period: { type: "string" }
                  cashAndCashEquivalents: { type: "number" }
                  shortTermInvestments: { type: "number" }
                  cashAndShortTermInvestments: { type: "number" }
                  netReceivables: { type: "number" }
                  inventory: { type: "number" }
                  otherCurrentAssets: { type: "number" }
                  totalCurrentAssets: { type: "number" }
                  propertyPlantEquipmentNet: { type: "number" }
                  goodwill: { type: "number" }
                  intangibleAssets: { type: "number" }
                  goodwillAndIntangibleAssets: { type: "number" }
                  longTermInvestments: { type: "number" }
                  taxAssets: { type: "number" }
                  otherNonCurrentAssets: { type: "number" }
                  totalNonCurrentAssets: { type: "number" }
                  otherAssets: { type: "number" }
                  totalAssets: { type: "number" }
                  accountPayables: { type: "number" }
                  shortTermDebt: { type: "number" }
                  taxPayables: { type: "number" }
                  deferredRevenue: { type: "number" }
                  otherCurrentLiabilities: { type: "number" }
                  totalCurrentLiabilities: { type: "number" }
                  longTermDebt: { type: "number" }
                  deferredRevenueNonCurrent: { type: "number" }
                  deferredTaxLiabilitiesNonCurrent: { type: "number" }
                  otherNonCurrentLiabilities: { type: "number" }
                  totalNonCurrentLiabilities: { type: "number" }
                  otherLiabilities: { type: "number" }
                  capitalLeaseObligations: { type: "number" }
                  totalLiabilities: { type: "number" }
                  preferredStock: { type: "number" }
                  commonStock: { type: "number" }
                  retainedEarnings: { type: "number" }
                  accumulatedOtherComprehensiveIncomeLoss: { type: "number" }
                  othertotalStockholdersEquity: { type: "number" }
                  totalStockholdersEquity: { type: "number" }
                  totalEquity: { type: "number" }
                  totalLiabilitiesAndStockholdersEquity: { type: "number" }
                  minorityInterest: { type: "number" }
                  totalLiabilitiesAndTotalEquity: { type: "number" }
                  totalInvestments: { type: "number" }
                  totalDebt: { type: "number" }
                  netDebt: { type: "number" }
                  link: { type: "string", format: "uri" }
                  finalLink: { type: "string", format: "uri" }
                additionalProperties: false

  /cash-flow-statement/{ticker}:
    get:
      summary: Get Cash Flow Statement
      parameters:
        - in: path
          name: ticker
          required: true
          schema:
            type: string
          description: Ticker symbol of the company
        - in: query
          name: period
          schema:
            type: string
            default: quarter
          description: Period of the statement (e.g., annual, quarter)
        - in: query
          name: datatype
          schema:
            type: string
          description: Type of the data format (e.g., csv)
        - in: query
          name: limit
          schema:
            type: number
          description: Limit for the number of results
        - in: query
          name: apikey
          required: true
          schema:
            type: string
          description: API key for authorization
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    acceptedDate: { type: "string" }
                    accountsPayables: { type: "number" }
                    accountsReceivables: { type: "number" }
                    acquisitionsNet: { type: "number" }
                    calendarYear: { type: "string" }
                    capitalExpenditure: { type: "number" }
                    cashAtBeginningOfPeriod: { type: "number" }
                    cashAtEndOfPeriod: { type: "number" }
                    changeInWorkingCapital: { type: "number" }
                    cik: { type: "string" }
                    commonStockIssued: { type: "number" }
                    commonStockRepurchased: { type: "number" }
                    date: { type: "string" }
                    debtRepayment: { type: "number" }
                    deferredIncomeTax: { type: "number" }
                    depreciationAndAmortization: { type: "number" }
                    dividendsPaid: { type: "number" }
                    effectOfForexChangesOnCash: { type: "number" }
                    fillingDate: { type: "string" }
                    finalLink: { type: "string", format: "uri" }
                    freeCashFlow: { type: "number" }
                    inventory: { type: "number" }
                    investmentsInPropertyPlantAndEquipment: { type: "number" }
                    link: { type: "string", format: "uri" }
                    netCashProvidedByOperatingActivities: { type: "number" }
                    netCashUsedForInvestingActivites: { type: "number" }
                    netCashUsedProvidedByFinancingActivities: { type: "number" }
                    netChangeInCash: { type: "number" }
                    netIncome: { type: "number" }
                    operatingCashFlow: { type: "number" }
                    otherFinancingActivites: { type: "number" }
                    otherInvestingActivites: { type: "number" }
                    otherNonCashItems: { type: "number" }
                    otherWorkingCapital: { type: "number" }
                    period: { type: "string" }
                    purchasesOfInvestments: { type: "number" }
                    reportedCurrency: { type: "string" }
                    salesMaturitiesOfInvestments: { type: "number" }
                    stockBasedCompensation: { type: "number" }
                    symbol: { type: "string" }
                  additionalProperties: true
  /key-metrics/{ticker}:
    get:
      summary: Get Key Metrics for a Company
      description: Retrieve the key financial metrics for a specified company based on the ticker symbol.
      parameters:
        - in: path
          name: ticker
          required: true
          schema:
            type: string
          description: Ticker symbol of the company
        - in: query
          name: period
          schema:
            type: string
            enum: [annual, quarter]
          description: Period of the metrics data
        - in: query
          name: limit
          schema:
            type: number
          description: Limit the number of results returned
        - in: query
          name: apikey
          required: true
          schema:
            type: string
          description: API key for authorization
      responses:
        '200':
          description: Successful retrieval of key metrics
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    ticker: { type: "string" }
                    date: { type: "string" }
                    calendarYear: { type: "string" }
                    period: { type: "string" }
                    revenuePerShare: { type: "number" }
                    netIncomePerShare: { type: "number" }
                    operatingCashFlowPerShare: { type: "number" }
                    freeCashFlowPerShare: { type: "number" }
                    cashPerShare: { type: "number" }
                    bookValuePerShare: { type: "number" }
                    tangibleBookValuePerShare: { type: "number" }
                    shareholdersEquityPerShare: { type: "number" }
                    interestDebtPerShare: { type: "number" }
                    marketCap: { type: "number" }
                    enterpriseValue: { type: "number" }
                    peRatio: { type: "number" }
                    priceToSalesRatio: { type: "number" }
                    pocfratio: { type: "number" }
                    pfcfRatio: { type: "number" }
                    pbRatio: { type: "number" }
                    ptbRatio: { type: "number" }
                    evToSales: { type: "number" }
                    enterpriseValueOverEBITDA: { type: "number" }
                    evToOperatingCashFlow: { type: "number" }
                    evToFreeCashFlow: { type: "number" }
                    earningsYield: { type: "number" }
                    freeCashFlowYield: { type: "number" }
                    debtToEquity: { type: "number" }
                    debtToAssets: { type: "number" }
                    netDebtToEBITDA: { type: "number" }
                    currentRatio: { type: "number" }
                    interestCoverage: { type: "number" }
                    incomeQuality: { type: "number" }
                    dividendYield: { type: "number" }
                    payoutRatio: { type: "number" }
                    salesGeneralAndAdministrativeToRevenue: { type: "number" }
                    researchAndDevelopmentToRevenue: { type: "number" }
                    intangiblesToTotalAssets: { type: "number" }
                    capexToOperatingCashFlow: { type: "number" }
                    capexToRevenue: { type: "number" }
                    capexToDepreciation: { type: "number" }
                    stockBasedCompensationToRevenue: { type: "number" }
                    grahamNumber: { type: "number" }
                    roic: { type: "number" }
                    returnOnTangibleAssets: { type: "number" }
                    grahamNetNet: { type: "number" }
                    workingCapital: { type: "number" }
                    tangibleAssetValue: { type: "number" }
                    netCurrentAssetValue: { type: "number" }
                    investedCapital: { type: "number" }
                    averageReceivables: { type: "number" }
                    averagePayables: { type: "number" }
                    averageInventory: { type: "number" }
                    daysSalesOutstanding: { type: "number" }
                    daysPayablesOutstanding: { type: "number" }
                    daysOfInventoryOnHand: { type: "number" }
                    receivablesTurnover: { type: "number" }
                    payablesTurnover: { type: "number" }
                    inventoryTurnover: { type: "number" }
                    roe: { type: "number" }
                    capexPerShare: { type: "number" }
                  additionalProperties: true
  /discounted-cash-flow/{ticker}:
    get:
      summary: Get Discounted Cash Flow Valuation
      description: Retrieve the discounted cash flow (DCF) valuation for a company, a method to estimate the value of an investment based on its expected future cash flows. The valuation uses the specified stock ticker to return the DCF and current stock price.
      parameters:
        - in: path
          name: ticker
          required: true
          schema:
            type: string
          description: Ticker symbol of the company for which to retrieve DCF valuation
        - in: query
          name: apikey
          required: true
          schema:
            type: string
          description: API key for authorization
      responses:
        '200':
          description: Successful retrieval of DCF valuation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    symbol: { type: "string" }
                    date: { type: "string" }
                    dcf: { type: "number", format: "float", description: "Discounted cash flow valuation" }
                    Stock Price: { type: "number", format: "float", description: "Current stock price at the date of valuation" }
                additionalProperties: true
  /historical-price-full/stock_dividend/{ticker}:
    get:
      summary: Get Historical Dividend Data for a Stock
      description: Retrieve historical dividend data for a specific stock identified by its ticker symbol.
      parameters:
        - in: path
          name: ticker
          required: true
          schema:
            type: string
          description: Ticker symbol of the company to retrieve historical dividend data for.
        - in: query
          name: apikey
          required: true
          schema:
            type: string
          description: API key for authorization
      responses:
        '200':
          description: Successful retrieval of historical dividend data
          content:
            application/json:
              schema:
                type: object
                properties:
                  symbol: { type: "string" }
                  historical:
                    type: array
                    items:
                      type: object
                      properties:
                        date: { type: "string" }
                        label: { type: "string" }
                        adjDividend: { type: "number" }
                        dividend: { type: "number" }
                        recordDate: { type: "string" }
                        paymentDate: { type: "string" }
                        declarationDate: { type: "string" }
                additionalProperties: true
  /profile/{ticker}:
    get:
      summary: Get Company Profile
      description: Retrieve comprehensive profile information for a specified company based on the ticker symbol, including financial data, company description, and other essential details.
      parameters:
        - in: path
          name: ticker
          required: true
          schema:
            type: string
          description: Ticker symbol of the company
        - in: query
          name: apikey
          required: true
          schema:
            type: string
          description: API key for authorization
      responses:
        '200':
          description: Successful retrieval of company profile
          content:
            application/json:
              schema:
                type: object
                properties:
                  symbol: { type: "string" }
                  price: { type: "number" }
                  beta: { type: "number" }
                  volAvg: { type: "number" }
                  mktCap: { type: "number" }
                  lastDiv: { type: "number" }
                  range: { type: "string" }
                  changes: { type: "number" }
                  companyName: { type: "string" }
                  currency: { type: "string" }
                  cik: { type: "string" }
                  isin: { type: "string" }
                  cusip: { type: "string" }
                  exchange: { type: "string" }
                  exchangeShortName: { type: "string" }
                  industry: { type: "string" }
                  website: { type: "string", format: "uri" }
                  description: { type: "string" }
                  ceo: { type: "string" }
                  sector: { type: "string" }
                  country: { type: "string" }
                  fullTimeEmployees: { type: "number" }
                  phone: { type: "string" }
                  address: { type: "string" }
                  city: { type: "string" }
                  state: { type: "string" }
                  zip: { type: "string" }
                  dcfDiff: { type: "number" }
                  dcf: { type: "number" }
                  image: { type: "string", format: "uri" }
                  ipoDate: { type: "string", format: "date" }
                  defaultImage: { type: "boolean" }
                  isEtf: { type: "boolean" }
                  isActivelyTrading: { type: "boolean" }
                  isAdr: { type: "boolean" }
                  isFund: { type: "boolean" }
                additionalProperties: false
  /technical_indicator/{timeframe}/{ticker}:
    get:
      summary: Get Technical Indicators for a Stock
      description: Retrieves technical indicators for a given stock symbol over specified timeframes.
      parameters:
        - in: path
          name: timeframe
          required: true
          schema:
            type: string
            enum: [1min, 5min, 15min, 30min, 1hour, 4hour, 1day]
          description: Timeframe for which the data is requested
        - in: path
          name: ticker
          required: true
          schema:
            type: string
          description: Ticker symbol of the stock
        - in: query
          name: type
          required: true
          schema:
            type: string
            enum: [sma, ema, wma, dema, tema, williams, rsi, adx, standarddeviation]
          description: Type of technical indicator
        - in: query
          name: period
          required: true
          schema:
            type: integer
          description: Period count for the technical indicator, specifies how many data points to calculate
        - in: query
          name: from
          schema:
            type: string
            format: date
          description: Start date for the data range (optional)
        - in: query
          name: to
          schema:
            type: string
            format: date
          description: End date for the data range (optional)
        - in: query
          name: apikey
          required: true
          schema:
            type: string
          description: API key for authorization
      responses:
        '200':
          description: Successful retrieval of technical indicators
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    date: { type: "string" }
                    open: { type: "number" }
                    high: { type: "number" }
                    low: { type: "number" }
                    close: { type: "number" }
                    volume: { type: "number" }
                    sma: { type: "number" }
                  additionalProperties: false
  /historical-price-full/{ticker}:
    get:
      summary: Get Historical Daily Prices for a Company
      description: Retrieves daily historical prices for a given company's stock, including opening, high, low, and closing prices. Allows filtering by date range and series type.
      parameters:
        - in: path
          name: ticker
          required: true
          schema:
            type: string
          description: Ticker symbol of the stock for which historical data is required
        - in: query
          name: from
          schema:
            type: string
            format: date
          description: Start date for filtering historical data (optional)
        - in: query
          name: to
          schema:
            type: string
            format: date
          description: End date for filtering historical data (optional)
        - in: query
          name: serietype
          schema:
            type: string
            default: line
          description: Type of data series to retrieve, e.g., 'line' (optional)
        - in: query
          name: apikey
          required: true
          schema:
            type: string
          description: API key for authorization
      responses:
        '200':
          description: Successful retrieval of historical prices
          content:
            application/json:
              schema:
                type: object
                properties:
                  symbol: { type: "string" }
                  historical:
                    type: array
                    items:
                      type: object
                      properties:
                        date: { type: "string" }
                        open: { type: "number" }
                        high: { type: "number" }
                        low: { type: "number" }
                        close: { type: "number" }
                        adjClose: { type: "number" }
                        volume: { type: "number" }
                        unadjustedVolume: { type: "number" }
                        change: { type: "number" }
                        changePercent: { type: "number" }
                        vwap: { type: "number" }
                        label: { type: "string" }
                        changeOverTime: { type: "number" }
  /ratios/{ticker}:
    get:
      summary: Get Financial Ratios for a Company
      description: Retrieves financial ratios for a specified company based on the ticker symbol, such as P/B ratio, ROE, and many others, which help assess the company's financial health and compare it to its competitors.
      parameters:
        - in: path
          name: ticker
          required: true
          schema:
            type: string
          description: Ticker symbol of the company for which financial ratios are required
        - in: query
          name: period
          schema:
            type: string
            enum: [annual, quarter]
          description: Specifies whether to fetch annual or quarterly financial ratios
        - in: query
          name: limit
          schema:
            type: number
          description: Limit the number of historical entries returned, with a maximum span of 5 years
        - in: query
          name: apikey
          required: true
          schema:
            type: string
          description: API key for authorization
      responses:
        '200':
          description: Successful retrieval of financial ratios
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    symbol: { type: "string" }
                    date: { type: "string" }
                    calendarYear: { type: "string" }
                    period: { type: "string" }
                    currentRatio: { type: "number" }
                    quickRatio: { type: "number" }
                    cashRatio: { type: "number" }
                    daysOfSalesOutstanding: { type: "number" }
                    daysOfInventoryOutstanding: { type: "number" }
                    operatingCycle: { type: "number" }
                    daysOfPayablesOutstanding: { type: "number" }
                    cashConversionCycle: { type: "number" }
                    grossProfitMargin: { type: "number" }
                    operatingProfitMargin: { type: "number" }
                    pretaxProfitMargin: { type: "number" }
                    netProfitMargin: { type: "number" }
                    effectiveTaxRate: { type: "number" }
                    returnOnAssets: { type: "number" }
                    returnOnEquity: { type: "number" }
                    returnOnCapitalEmployed: { type: "number" }
                    netIncomePerEBT: { type: "number" }
                    ebtPerEbit: { type: "number" }
                    ebitPerRevenue: { type: "number" }
                    debtRatio: { type: "number" }
                    debtEquityRatio: { type: "number" }
                    longTermDebtToCapitalization: { type: "number" }
                    totalDebtToCapitalization: { type: "number" }
                    interestCoverage: { type: "number" }
                    cashFlowToDebtRatio: { type: "number" }
                    companyEquityMultiplier: { type: "number" }
                    receivablesTurnover: { type: "number" }
                    payablesTurnover: { type: "number" }
                    inventoryTurnover: { type: "number" }
                    fixedAssetTurnover: { type: "number" }
                    assetTurnover: { type: "number" }
                    operatingCashFlowPerShare: { type: "number" }
                    freeCashFlowPerShare: { type: "number" }
                    cashPerShare: { type: "number" }
                    payoutRatio: { type: "number" }
                    operatingCashFlowSalesRatio: { type: "number" }
                    freeCashFlowOperatingCashFlowRatio: { type: "number" }
                    cashFlowCoverageRatios: { type: "number" }
                    shortTermCoverageRatios: { type: "number" }
                    capitalExpenditureCoverageRatio: { type: "number" }
                    dividendPaidAndCapexCoverageRatio: { type: "number" }
                    dividendPayoutRatio: { type: "number" }
                    priceBookValueRatio: { type: "number" }
                    priceToBookRatio: { type: "number" }
                    priceToSalesRatio: { type: "number" }
                    priceEarningsRatio: { type: "number" }
                    priceToFreeCashFlowsRatio: { type: "number" }
                    priceToOperatingCashFlowsRatio: { type: "number" }
                    priceCashFlowRatio: { type: "number" }
                    priceEarningsToGrowthRatio: { type: "number" }
                    priceSalesRatio: { type: "number" }
                    dividendYield: { type: "number" }
                    enterpriseValueMultiple: { type: "number" }
                    priceFairValue: { type: "number" }
